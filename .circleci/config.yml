# os: linux
# dist: ubuntu
# language: python
# cache: pip
# python: 3.8

# stages:
#   - test
#   - staging
#   - bastion
#   - prod
#   - deploy

# jobs:
#   include:

#   - name: BuildStaging
#     stage: staging
#     env: ENVIRONMENT="staging"
#     if: |
#       type = pull_request AND \
#       branch = staging
#     script:
#       - ci/apply_sam_workflow_pr.sh

#   - name: BuildBastion
#     stage: bastion
#     env: ENVIRONMENT="bastion"
#     if: |
#       type = pull_request AND \
#       branch = master
#     script:
#       - ci/test_sam_workflow_pr.sh

#   - name: BuildProd
#     stage: prod
#     env: ENVIRONMENT="prod"
#     if: |
#       type = pull_request AND \
#       branch = master
#     script:
#       - ci/test_sam_workflow_pr.sh

#   - name: Deploy
#     stage: deploy
#     if: |
#       type = push AND \
#       branch IN (master, staging)
#     script:
#       - echo "Deploy"
#     deploy:
#       - provider: script
#         edge: true
#         script: ci/deploy.sh staging
#         on:
#           branch: staging

#       - provider: script
#         edge: true
#         script: ci/deploy.sh bastion
#         on:
#           branch: master

#       - provider: script
#         edge: true
#         script: ci/deploy.sh prod
#         on:
#           branch: master
# install:
#   - echo "Install dependencies"
#   - sudo chmod +x ci/*
#   - ci/install_dependencies.sh
#   - ci/aws_auth.sh

# version: 2.1

#   - name: Linting
#     stage: test
#     if: |
#       type = pull_request AND \
#       branch IN (master, staging)
#     before_script:
#       - git remote set-branches --add origin $TRAVIS_BRANCH
#       - git fetch
#     script:
#       - source ci/find_changed_files.sh
#       - ci/cfn_lint.sh
version: 2.1

jobs:

  test:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - run:
          name: Get name of target branch
          command: |
            curl -L "https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64" \
              -o jq
            chmod u+x jq
            pr_number="${CIRCLE_PULL_REQUEST##*/}"
            url="https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pulls/${pr_number}"
            export TARGET_BRANCH=$(\
                curl "$url" \
                -H "Authorization: $GITHUB_TOKEN" \
                    | ./jq '.base.ref' \
                    |  tr -d '"' \
                )
            if [ "$TARGET_BRANCH" = "master" || "$TARGET_BRANCH" = "staging"]; then
              echo "Target branch - $TARGET_BRANCH"
              echo "$TARGET_BRANCH" > /tmp/target_branch
            else
              echo "Target branch - $TARGET_BRANCH"
              echo "Cannot continue build on this branch"
              exit 1
            fi

      - run:
          name: Linting
          command: cat /tmp/target_branch | xargs -I {} source ci/find_changed_files.sh {} && ci/cfn_lint.sh

workflows:
    version: 2
    test:
      jobs:
        - test:
            filters:
              branches:
                only:
                  - master
                  - staging
                  - circleci
#             filters:
#               tags:
#                 only: /^v\d+\.\d+\.\d+(-alpha\.\d+)?$/
#         - deploy:
#             requires:
#               - test
#             filters:
#               branches:
#                 ignore: /.*/
#               tags:
#                 only: /^v\d+\.\d+\.\d+(-alpha\.\d+)?$/

#   deploy:
#     machine:
#       image: ubuntu-2004:202107-02
#     steps:
#       - checkout
#       - run:
#           name: Install dependencies
#           command: chmod u+x ./ci/** && ./ci/install_aws_cli
#       - run:
#           name: Authenticate
#           command: ./ci/aws_auth && chmod u+x ./cd/** && ./cd/docker_auth bastion
#       - run:
#           name: Build Docker image
#           command: ./cd/docker_build understat-crawler $CIRCLE_TAG
#       - run:
#           name: Deploy Docker image
#           command: ./cd/docker_push understat-crawler $CIRCLE_TAG
#       - run:
#           name: Clean up untagged images
#           command: ./cd/docker_remove_untagged_images understat-crawler bastion

# workflows:
#     version: 2
#     test-build-deploy:
#       jobs:
#         - test:
#             filters:
#               tags:
#                 only: /^v\d+\.\d+\.\d+(-alpha\.\d+)?$/
#         - deploy:
#             requires:
#               - test
#             filters:
#               branches:
#                 ignore: /.*/
#               tags:
#                 only: /^v\d+\.\d+\.\d+(-alpha\.\d+)?$/


