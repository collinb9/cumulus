AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  Deploy Mlflow as an ECS service, along with all its required resources.

Parameters:

  EnvironmentName:
    Type: String
    Description: >-
      An environment name that will be suffixed to all resources.
      Example: dev, stage, utils, prod.

  MlflowImageUrl:
    Type: String
    Description: The url of the Mlflow docker image to deploy.

  MlflowContainerCpu:
    Type: Number
    Default: 128
    Description: How much CPU to give the container. 1024 is 1 CPU.

  MlflowContainerMemory:
    Type: Number
    Default: 512
    Description: How much memory in megabytes to give the container.

Resources:

###############################################################################
# \/                        Postgres database                              \/ #
###############################################################################

  MlflowDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Ref AWS::StackName
      DBSubnetGroupName: !Sub mlflow-${EnvironmentName}
      SubnetIds:
        - Fn::ImportValue: !Sub "PublicSubnet1-${EnvironmentName}"
        - Fn::ImportValue: !Sub "PublicSubnet2-${EnvironmentName}"

  MlflowDBAccessSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub mlflow-db-access-${EnvironmentName}
      GroupDescription: Security group for mlflow access
      VpcId:
        Fn::ImportValue: !Sub "VPC-${EnvironmentName}"

  MlflowDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub mlflow-db-${EnvironmentName}
      GroupDescription: Security group for mlflow database
      VpcId:
        Fn::ImportValue: !Sub "VPC-${EnvironmentName}"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref MlflowDBAccessSecurityGroup
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  MlflowDBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Admin password for mlflow db instance
      GenerateSecretString:
        ExcludePunctuation: true
        PasswordLength: 16
        SecretStringTemplate: '{"username":"master"}'
        GenerateStringKey: password
      Name: !Sub mlflow-secret-${EnvironmentName}

  MlflowDBInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot # default
    UpdateReplacePolicy: Snapshot
    Properties:
      AllocatedStorage: 20
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: 14
      CopyTagsToSnapshot: true
      DBInstanceClass: db.t4g.micro
      DBInstanceIdentifier: !Sub mlflow-db-${EnvironmentName}
      DBSnapshotIdentifier: ""
      DBSubnetGroupName: !Ref MlflowDBSubnetGroup
      EnableIAMDatabaseAuthentication: true
      Engine: postgres
      EngineVersion: 14.2
      MasterUsername: master
      MasterUserPassword: !Join
        - ':'
        - - '{{resolve:secretsmanager'
          - !Ref MlflowDBSecret
          - 'SecretString:password}}'
      MultiAZ: false
      Port: 5432
      PreferredBackupWindow: 01:00-02:59
      PreferredMaintenanceWindow: Mon:03:00-Mon:05:00
      PubliclyAccessible: true
      StorageType: standard
      VPCSecurityGroups:
        - !Ref MlflowDBSecurityGroup
        - Fn::ImportValue: !Sub "OfficeSecurityGroup-${EnvironmentName}"
      Tags:
        - Key: project
          Value: mlflow

  MlflowUserDBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Admin password for mlflow_flow user in mlflow db instance
      GenerateSecretString:
        ExcludePunctuation: true
        PasswordLength: 16
        SecretStringTemplate: '{"username":"mlflow_user"}'
        GenerateStringKey: password
      Name: !Sub mlflow-user-secret-${EnvironmentName}


###############################################################################
# \/              Mlflow S3 bucket & access role configuration             \/ #
###############################################################################

  MlflowBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "trackman-mlflow-${EnvironmentName}"
    DeletionPolicy: Retain

  MlflowRole:
    Type: AWS::IAM::Role
    DependsOn:
      - MlflowBucket
    Properties:
      RoleName : !Sub "mlflow-${EnvironmentName}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
                - 'arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy'
      Path: /
      Policies:
        - PolicyName: ecs
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - cloudwatch:DescribeAlarmsForMetric
                  - cloudwatch:ListMetrics
                  - cloudwatch:GetMetricStatistics
                  - cloudwatch:GetMetricData
                  - ec2:DescribeTags
                  - ec2:DescribeInstances
                  - ec2:DescribeRegions
                  - tag:GetResources
                Resource: "*"
        - PolicyName: mlflow-bucket
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - !GetAtt MlflowBucket.Arn
                  - Fn::Join:
                    - "/"
                    - - !GetAtt MlflowBucket.Arn
                      - "*"

###############################################################################
# /\              Mlflow S3 bucket & access role configuration             /\ #
#                                                                             #
# \/                 Mlflow load-balancer configuration                    \/ #
###############################################################################

  MlflowLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "mlflow-load-balancer-${EnvironmentName}"
      GroupDescription: Security group for Mlflow elastic loadbalancer
      VpcId:
        Fn::ImportValue: !Sub "VPC-${EnvironmentName}"

  MlflowSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "mlflow-${EnvironmentName}"
      GroupDescription: Security group for Mlflow elastic loadbalancer
      VpcId:
        Fn::ImportValue: !Sub "VPC-${EnvironmentName}"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref MlflowLoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          SourceSecurityGroupId: !Ref MlflowLoadBalancerSecurityGroup

  ECSSecurityGroupRuleAdd:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: 0
      ToPort: 65535
      SourceSecurityGroupId:
        Fn::GetAtt:
        - MlflowSecurityGroup
        - GroupId
      GroupId:
        Fn::ImportValue: !Sub "EcsHostSecurityGroup-${EnvironmentName}"

  MlflowLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub "mlflow-${EnvironmentName}"
      Scheme: internet-facing
      Type: application
      Subnets:
        - Fn::ImportValue: !Sub "PublicSubnet1-${EnvironmentName}"
        - Fn::ImportValue: !Sub "PublicSubnet2-${EnvironmentName}"
      SecurityGroups:
        - Fn::ImportValue: !Sub "OfficeSecurityGroup-${EnvironmentName}"
        - !Ref MlflowLoadBalancerSecurityGroup
        - !Ref MlflowDBAccessSecurityGroup

  MlflowTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub "mlflow-${EnvironmentName}"
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      TargetType: ip
      VpcId:
        Fn::ImportValue: !Sub "VPC-${EnvironmentName}"
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 30

  MlflowListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
      - MlflowLoadBalancer
      - MlflowTargetGroup
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref MlflowTargetGroup
          Type: forward
      LoadBalancerArn: !Ref MlflowLoadBalancer
      Port: 80
      Protocol: HTTP

###############################################################################
# /\                 Mlflow load-balancer configuration                    /\ #
#                                                                             #
# \/                  Mlflow ECS service configuration                     \/ #
###############################################################################

  MlflowLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/ecs/mlflow-${EnvironmentName}"
      RetentionInDays: 90

  MlflowTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
      - MlflowLogGroup
    Properties:
      Cpu: !Ref MlflowContainerCpu
      Family: !Sub "mlflow-${EnvironmentName}"
      RequiresCompatibilities:
        - FARGATE
      Memory: !Ref MlflowContainerMemory
      TaskRoleArn: !GetAtt MlflowRole.Arn
      ExecutionRoleArn: !GetAtt MlflowRole.Arn
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: !Sub "mlflow-${EnvironmentName}"
          Cpu: !Ref MlflowContainerCpu
          Environment:
            # - Name: MLFLOW_S3_BUCKET_NAME
            #   Value: !Ref MlflowBucket
            # - Name: MLFLOW_BACKEND_STORE_URI
            #   Value: /opt/mlflow
            - Name: DEFAULT_ARTIFACT_ROOT
              Value: !Join
                - ''
                - - s3://
                  - !Ref MlflowBucket
                  - '/'
            - Name: BACKEND_STORE_URI
              Value: !Join
                - ''
                - - postgresql://
                  - !Join
                    - ':'
                    - - '{{resolve:secretsmanager'
                      - !Ref MlflowUserDBSecret
                      - 'SecretString:username}}'
                  - ':'
                  - !Join
                    - ':'
                    - - '{{resolve:secretsmanager'
                      - !Ref MlflowUserDBSecret
                      - 'SecretString:password}}'
                  - '@'
                  - !GetAtt MlflowDBInstance.Endpoint.Address
                  - /mlflow_db
          Image: !Ref MlflowImageUrl
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref MlflowLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: mlflow
          Memory: !Ref MlflowContainerMemory
          # MountPoints:
          #   - ContainerPath: /opt/mlflow
          #     SourceVolume: backend-store
          PortMappings:
            - ContainerPort: 5000
      # Volumes:
      #   - Name: backend-store
      #     DockerVolumeConfiguration:
      #       Autoprovision: true
      #       Driver: local
      #       Scope: shared

  MlflowService:
    Type: AWS::ECS::Service
    DependsOn:
      - MlflowListener
      - MlflowTaskDefinition
    Properties:
      ServiceName: !Sub "mlflow-${EnvironmentName}"
      Cluster:
        Fn::ImportValue: !Sub "ECSCluster-${EnvironmentName}"
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - Fn::ImportValue: !Sub "PublicSubnet1-${EnvironmentName}"
            - Fn::ImportValue: !Sub "PublicSubnet2-${EnvironmentName}"
          SecurityGroups:
            - Fn::ImportValue: !Sub "OfficeSecurityGroup-${EnvironmentName}"
            - !Ref MlflowSecurityGroup
            - !Ref MlflowDBAccessSecurityGroup
      DesiredCount: 1
      TaskDefinition: !Ref MlflowTaskDefinition
      LoadBalancers:
        - ContainerName: !Sub "mlflow-${EnvironmentName}"
          ContainerPort: 5000
          TargetGroupArn: !Ref MlflowTargetGroup
      LaunchType: FARGATE

###############################################################################
# /\                  Mlflow ECS service configuration                     /\ #
#                                                                             #
# \/                      Mlflow alerts configuration                      \/ #
###############################################################################

  # MlflowLowCpuUsageAlarm:
  #   Type: AWS::CloudWatch::Alarm
  #   Properties:
  #     AlarmName: !Sub "mlflow-low_cpu-${EnvironmentName}"
  #     AlarmDescription: CPUUtilization low
  #     MetricName: CPUUtilization
  #     Namespace: AWS/ECS
  #     Dimensions:
  #       - Name: ServiceName
  #         Value: !Ref MlflowService
  #     Statistic: Average
  #     Period: 60
  #     EvaluationPeriods: 1
  #     Threshold: 20
  #     ComparisonOperator: LessThanOrEqualToThreshold

  # MlflowHighCpuUsageAlarm:
  #   Type: AWS::CloudWatch::Alarm
  #   Properties:
  #     AlarmName: !Sub "mlflow-high_cpu-${EnvironmentName}"
  #     AlarmDescription: CPUUtilization high
  #     MetricName: CPUUtilization
  #     Namespace: AWS/ECS
  #     Dimensions:
  #       - Name: ServiceName
  #         Value: !Ref MlflowService
  #     Statistic: Average
  #     Period: 60
  #     EvaluationPeriods: 1
  #     Threshold: 70
  #     ComparisonOperator: GreaterThanOrEqualToThreshold


Outputs:

  MlflowLoadBalancerSecurityGroup:
    Description: Security group to access the load balancer for mlflow tracking server
    Value: !Ref MlflowLoadBalancerSecurityGroup
    Export:
      Name: !Sub "MlflowLoadBalancerSecurityGroup-${EnvironmentName}"
