AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >-
  Deploy Mlflow as an ECS service, along with all its required resources.

Parameters:

  Environment:
    Description: The account where the resources are being created
    Type: String
    Default: staging
    AllowedValues:
      - staging
      - prod

  MlflowImageUrl:
    Type: String
    Description: The url of the Mlflow docker image to deploy.

  DBStorage:
    Type: Number
    Description: Storage to assign DB instance
    Default: 5

  Enable:
    Type: String
    Description: Enable resources
    Default: false

  MlflowContainerCpu:
    Type: Number
    Default: 128
    Description: How much CPU to give the container. 1024 is 1 CPU.

  MlflowContainerMemory:
    Type: Number
    Default: 512
    Description: How much memory in megabytes to give the container.

  MlflowContainerPort:
    Type: Number
    Default: 5000
    Description: Port on which the docker container is listening for connections

Conditions:

  Enabled: !Equals
    - !Ref Enable
    - true

Resources:


###############################################################################
# \/                        Postgres database                              \/ #
###############################################################################

  MlflowDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Ref AWS::StackName
      DBSubnetGroupName: !Sub mlflow-${Environment}
      SubnetIds:
        - Fn::ImportValue: !Sub ec2-vpc-${Environment}:PublicSubnet1
        - Fn::ImportValue: !Sub ec2-vpc-${Environment}:PublicSubnet2

  MlflowDBAccessSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub mlflow-db-access-${Environment}
      GroupDescription: Security group for mlflow access
      VpcId:
        Fn::ImportValue:
          !Sub ec2-vpc-${Environment}:VPC

  MlflowDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub mlflow-db-${Environment}
      GroupDescription: Security group for mlflow database
      VpcId:
        Fn::ImportValue:
          !Sub ec2-vpc-${Environment}:VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref MlflowDBAccessSecurityGroup
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref MlflowSecurityGroup
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  MlflowDBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Admin password for mlflow db instance
      GenerateSecretString:
        ExcludePunctuation: true
        PasswordLength: 16
        SecretStringTemplate: '{"username":"admin"}'
        GenerateStringKey: password
      Name: !Sub mlflow-secret-${Environment}

  MlflowDBInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot # default
    UpdateReplacePolicy: Snapshot
    Properties:
      AllocatedStorage: !Ref DBStorage
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: 14
      CopyTagsToSnapshot: true
      DBInstanceClass: db.t4g.micro
      DBInstanceIdentifier: !Sub mlflow-db-${Environment}
      DBSnapshotIdentifier: ""
      DBSubnetGroupName: !Ref MlflowDBSubnetGroup
      EnableIAMDatabaseAuthentication: true
      Engine: postgres
      EngineVersion: 14.2
      MasterUsername: master
      MasterUserPassword: !Join
        - ':'
        - - '{{resolve:secretsmanager'
          - !Ref MlflowDBSecret
          - 'SecretString:password}}'
      MultiAZ: false
      Port: 5432
      PreferredBackupWindow: 01:00-02:59
      PreferredMaintenanceWindow: Mon:03:00-Mon:05:00
      PubliclyAccessible: true
      StorageType: standard
      VPCSecurityGroups:
        - !Ref MlflowDBSecurityGroup
        - Fn::ImportValue: !Sub ec2-vpc-${Environment}:HomeSecurityGroup
      Tags:
        - Key: application
          Value: !Sub mlflow-${Environment}
        - Key: application-type
          Value: ecs-service

  MlflowUserDBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Admin password for mlflow_flow user in mlflow db instance
      GenerateSecretString:
        ExcludePunctuation: true
        PasswordLength: 16
        SecretStringTemplate: '{"username":"mlflow_user"}'
        GenerateStringKey: password
      Name: !Sub mlflow-user-secret-${Environment}

################################################################################
## \/              Mlflow S3 bucket & access role configuration             \/ #
################################################################################

  MlflowBucket:
    Type: AWS::Serverless::Application
    Properties:
      Location: ../s3/base/template.yaml
      Parameters:
        Environment: !Ref Environment
        BucketName: mlflow
        Versioning: Suspended

  MlflowRole:
    Type: AWS::IAM::Role
    DependsOn:
     - MlflowBucket
    Properties:
     RoleName : !Sub mlflow-role-${Environment}
     AssumeRolePolicyDocument:
       Version: 2012-10-17
       Statement:
         - Effect: Allow
           Principal:
             Service:
               - ecs-tasks.amazonaws.com
               # - build.apprunner.amazonaws.com
           Action:
             - sts:AssumeRole
     ManagedPolicyArns:
       - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
               # - arn:aws:iam::aws:policy/service-role/AWSAppRunnerServicePolicyForECRAccess
     Path: /
     Policies:
       - PolicyName: ecs
         PolicyDocument:
           Statement:
             - Effect: Allow
               Action:
                 - cloudwatch:DescribeAlarmsForMetric
                 - cloudwatch:ListMetrics
                 - cloudwatch:GetMetricStatistics
                 - cloudwatch:GetMetricData
                 - ec2:DescribeTags
                 - ec2:DescribeInstances
                 - ec2:DescribeRegions
                 - tag:GetResources
               Resource: "*"
       - PolicyName: mlflow-bucket
         PolicyDocument:
           Statement:
             - Effect: Allow
               Action:
                 - s3:*
               Resource:
                 - !GetAtt MlflowBucket.Outputs.BucketArn
                 - Fn::Join:
                   - "/"
                   - - !GetAtt MlflowBucket.Outputs.BucketArn
                     - "*"


###############################################################################
# /\              Mlflow S3 bucket & access role configuration             /\ #
#                                                                             #
# \/                 Mlflow load-balancer configuration                    \/ #
###############################################################################

  MlflowSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub mlflow-sg-${Environment}
      GroupDescription: Security group for Mlflow elastic loadbalancer
      VpcId:
        Fn::ImportValue: !Sub ec2-vpc-${Environment}:VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId:
            Fn::ImportValue:
              !Sub ecs-loadbalancer-${Environment}:LoadBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          SourceSecurityGroupId:
            Fn::ImportValue:
              !Sub ecs-loadbalancer-${Environment}:LoadBalancerSecurityGroup
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          SourceSecurityGroupId:
            Fn::ImportValue:
              !Sub ecs-loadbalancer-${Environment}:LoadBalancerSecurityGroup

  MlflowTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Condition: Enabled
    Properties:
      Name: !Sub mlflow-targetgroup-${Environment}
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 5
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      TargetType: ip
      VpcId:
        Fn::ImportValue:
          !Sub ec2-vpc-${Environment}:VPC
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 30

  MlflowListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Condition: Enabled
    DependsOn:
      - MlflowTargetGroup
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref MlflowTargetGroup
          Type: forward
      LoadBalancerArn:
        Fn::ImportValue:
          !Sub ecs-loadbalancer-${Environment}:LoadBalancer
      Port: 80
      Protocol: HTTP

###############################################################################
# /\                 Mlflow load-balancer configuration                    /\ #
#                                                                             #
# \/                  Mlflow ECS service configuration                     \/ #
###############################################################################

  MlflowLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/ecs/mlflow-${Environment}
      RetentionInDays: 90

  MlflowTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
      - MlflowLogGroup
    Properties:
      Cpu: 512
      Family: !Sub mlflow-${Environment}
      RequiresCompatibilities:
        - FARGATE
      Memory: 1024
      TaskRoleArn: !GetAtt MlflowRole.Arn
      ExecutionRoleArn: !GetAtt MlflowRole.Arn
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: !Sub mlflow-${Environment}
          Cpu: 1
          Environment:
            - Name: DEFAULT_ARTIFACT_ROOT
              Value: !Join
                - ''
                - - s3://
                  - !GetAtt MlflowBucket.Outputs.BucketName
            - Name: BACKEND_STORE_URI
              Value: !Join
                - ''
                - - postgresql://
                  - !Join
                    - ':'
                    - - '{{resolve:secretsmanager'
                      - !Ref MlflowUserDBSecret
                      - 'SecretString:username}}'
                  - ':'
                  - !Join
                    - ':'
                    - - '{{resolve:secretsmanager'
                      - !Ref MlflowUserDBSecret
                      - 'SecretString:password}}'
                  - '@'
                  - !GetAtt MlflowDBInstance.Endpoint.Address
                  - /mlflow_db
          Image: !Ref MlflowImageUrl
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref MlflowLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: mlflow
          PortMappings:
            - ContainerPort: 5000

  MlflowService:
    Type: AWS::ECS::Service
    Condition: Enabled
    DependsOn:
      - MlflowListener
    Properties:
      ServiceName: !Sub mlflow-ecs-service-${Environment}
      Cluster:
        Fn::ImportValue: !Sub ecs-cluster-${Environment}:ECSCluster
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - Fn::ImportValue: !Sub ec2-vpc-${Environment}:PublicSubnet1
            - Fn::ImportValue: !Sub ec2-vpc-${Environment}:PublicSubnet2
          SecurityGroups:
            - !Ref MlflowSecurityGroup
            # - !Ref MlflowDBAccessSecurityGroup
            # - Fn::ImportValue: !Sub ec2-vpc-${Environment}:HomeSecurityGroup
      DesiredCount: 1
      TaskDefinition: !Ref MlflowTaskDefinition
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: !Sub mlflow-${Environment}
          ContainerPort: 5000
          TargetGroupArn: !Ref MlflowTargetGroup

# Outputs:

#   MlflowAccessSecurityGroupId:
#     Value:
#       Fn::GetAtt:
#         - MlflowAccessSecurityGroup
#         - GroupId
#     Export:
#       Name:
#         Fn::Sub: ${AWS::StackName}:MlflowAccessSecurityGroupId

#   MlflowDBSecret:
#     Value: !Ref MlflowDBSecret
#     Export:
#       Name:
#         Fn::Sub: ${AWS::StackName}:MlflowDBSecret
#
