AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Mappings:
  AccountId:
    staging:
      accountid: 626964907981
    prod:
      accountid: 875094265107
    bastion:
      accountid: 564188978527

Resources:

  BaseUsers:
    Type: AWS::IAM::Group
    Properties:
      GroupName: BaseUsers
      Path: /
      Policies:
        - PolicyName: BasicIAM
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - iam:ChangePassword
                  - iam:ListMFADevices
                  - iam:ListAccessKeys
                  - iam:CreateAccessKey
                  - iam:CreateVirtualMFADevice
                  - iam:EnableMFADevice
                Resource: "*"

  Developers:
    Type: AWS::IAM::Group
    Properties:
      GroupName: Developers
      Path: /
      Policies:
        - PolicyName: AssumeDeveloperRoles
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - !Join
                    - ":"
                    - - arn
                      - !Ref AWS::Partition
                      - "iam:"
                      - Fn::FindInMap:
                        - AccountId
                        - staging
                        - accountid
                      - "role/DeveloperAccess-staging"
                  - !Join
                    - ":"
                    - - arn
                      - !Ref AWS::Partition
                      - "iam:"
                      - Fn::FindInMap:
                        - AccountId
                        - bastion
                        - accountid
                      - "role/DeveloperAccess-bastion"
                  - !Join
                    - ":"
                    - - arn
                      - !Ref AWS::Partition
                      - "iam:"
                      - Fn::FindInMap:
                        - AccountId
                        - prod
                        - accountid
                      - "role/ReadOnlyAccess-prod"

  Administrators:
    Type: AWS::IAM::Group
    Properties:
      GroupName: Administrators
      Path: /
      Policies:
        - PolicyName: AssumeDeveloperRoles
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - !Join
                    - ":"
                    - - arn
                      - !Ref AWS::Partition
                      - "iam:"
                      - Fn::FindInMap:
                        - AccountId
                        - staging
                        - accountid
                      - "role/DeveloperAccess-staging"
                  - !Join
                    - ":"
                    - - arn
                      - !Ref AWS::Partition
                      - "iam:"
                      - Fn::FindInMap:
                        - AccountId
                        - bastion
                        - accountid
                      - "role/DeveloperAccess-bastion"
                  - !Join
                    - ":"
                    - - arn
                      - !Ref AWS::Partition
                      - "iam:"
                      - Fn::FindInMap:
                        - AccountId
                        - prod
                        - accountid
                      - "role/DeveloperAccess-prod"

  Deployers:
    Type: AWS::IAM::Group
    Properties:
      GroupName: Deployers
      Path: /
      Policies:
        - PolicyName: AssumeDeployersRoles
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - !Join
                    - ":"
                    - - arn
                      - !Ref AWS::Partition
                      - "iam:"
                      - Fn::FindInMap:
                        - AccountId
                        - staging
                        - accountid
                      - "role/DeveloperAccess-staging"
                  - !Join
                    - ":"
                    - - arn
                      - !Ref AWS::Partition
                      - "iam:"
                      - Fn::FindInMap:
                        - AccountId
                        - prod
                        - accountid
                      - "role/DeveloperAccess-prod"

  IAMAdmins:
    Type: AWS::IAM::Group
    Properties:
      GroupName: IAMAdmins
      Path: /
      Policies:
        - PolicyName: AssumeIAMAdminRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - !Join
                    - ":"
                    - - arn
                      - !Ref AWS::Partition
                      - "iam:"
                      - Fn::FindInMap:
                        - AccountId
                        - bastion
                        - accountid
                      - "role/IAMAdmin-bastion"

Outputs:

  IAMAdminsName:
    Value: !Ref IAMAdmins
    Description: Name of the IAMAdmins group
    Export:
      Name: !Join
        - ":"
        - - !Ref "AWS::StackName"
          - IAMAdminsName

  IAMAdminsArn:
    Value: !GetAtt IAMAdmins.Arn
    Description: Arn of the IAMAdmins group
    Export:
      Name: !Join
        - ":"
        - - !Ref "AWS::StackName"
          - IAMAdminsArn

  DeployersName:
    Value: !Ref Deployers
    Description: Name of the Deployers group
    Export:
      Name: !Join
        - ":"
        - - !Ref "AWS::StackName"
          - DeployersName

  DeployersArn:
    Value: !GetAtt Deployers.Arn
    Description: Arn of the Deployers group
    Export:
      Name: !Join
        - ":"
        - - !Ref "AWS::StackName"
          - DeployersArn

  BaseUsersName:
    Value: !Ref BaseUsers
    Description: Name of the BaseUsers group
    Export:
      Name: !Join
        - ":"
        - - !Ref "AWS::StackName"
          - BaseUsersName

  BaseUsersArn:
    Value: !GetAtt BaseUsers.Arn
    Description: Arn of the BaseUsers group
    Export:
      Name: !Join
        - ":"
        - - !Ref "AWS::StackName"
          - BaseUsersArn

  DevelopersName:
    Value: !Ref Developers
    Description: Name of the Developers group
    Export:
      Name: !Join
        - ":"
        - - !Ref "AWS::StackName"
          - DevelopersName

  DevelopersArn:
    Value: !GetAtt Developers.Arn
    Description: Arn of the Developers group
    Export:
      Name: !Join
        - ":"
        - - !Ref "AWS::StackName"
          - DevelopersArn
